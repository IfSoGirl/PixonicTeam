{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "MainController",
        "requires": [
            "PixonicTeam.view.SlidingMenu",
            "PixonicTeam.view.ProfilePanel",
            "PixonicTeam.view.CalendarPanel"
        ]
    },
    "name": "MyController",
    "designerId": "c6b4a3d3-8f82-47c1-832e-7246d1f602d7",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "[action=menuButtonPressed]",
                "designer|targetType": "Ext.Button",
                "fn": "onMenuButtonTap",
                "implHandler": [
                    "var menus = Ext.Viewport.getMenus();",
                    "if (Ext.Viewport.getMenus().left.isHidden()){",
                    "    Ext.Viewport.showMenu('left');",
                    "}",
                    "else {",
                    "    Ext.Viewport.hideMenu('left');",
                    "}",
                    ""
                ],
                "name": "tap"
            },
            "name": "onMenuButtonTap",
            "designerId": "d5e7b2bd-6403-49b4-aed9-27822a8859e9"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "launch",
                "implHandler": [
                    "    mainController = this;",
                    "    Ext.Viewport.setMenu(Ext.create('PixonicTeam.view.SlidingMenu'), {",
                    "        side: 'left',",
                    "        reveal: false",
                    "    });",
                    "",
                    "    Ext.Viewport.add(Ext.create('PixonicTeam.view.ProfilePanel'));",
                    "    Ext.Viewport.add(Ext.create('PixonicTeam.view.CalendarPanel'));",
                    "",
                    "    var nav = Ext.create('PixonicTeam.view.EmployeesNav');",
                    "    Ext.Viewport.add(nav);",
                    "    Ext.create('PixonicTeam.view.ColleaguePanel', {",
                    "        title: 'Сотрудники'",
                    "    });",
                    ""
                ]
            },
            "name": "launch",
            "designerId": "6d5eb034-5b6d-4540-9848-30288c927899"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "[action=menuItemPressed]",
                "designer|targetType": "Ext.Button",
                "fn": "onMenuItemPressed",
                "implHandler": [
                    "    var targetPanel;",
                    "    switch(button.id){",
                    "        case 'profileMenuItem': {",
                    "            targetPanel = 'profilePanel';",
                    "            break;",
                    "        }",
                    "        case 'calendarMenuItem': {",
                    "            targetPanel = 'calendarPanel';",
                    "            break;",
                    "        }",
                    "        case 'employeesMenuItem': {",
                    "            targetPanel = 'employeePanel';",
                    "            break;",
                    "        }",
                    "        case 'logoutMenuItem': {",
                    "            localStorage.clear();",
                    "            targetPanel = 'loginPanel';",
                    "            break;",
                    "        }",
                    "        default:",
                    "            break;",
                    "    }",
                    "    console.log('Menu item pressed ' + button.id);",
                    "    ",
                    "    this.showPanel(targetPanel);"
                ],
                "name": "tap"
            },
            "name": "onMenuItemPressed",
            "designerId": "ea94f3cc-6f4a-4611-99d0-bf8f9953ba98"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "panelName"
                ],
                "fn": "showPanel",
                "implHandler": [
                    "    var tab, title;",
                    "    console.log('Controller show panel '+ panelName); ",
                    "    switch(panelName){",
                    "        case 'profilePanel': {",
                    "            tab = Ext.getCmp('profilePanel');",
                    "            break;",
                    "        }",
                    "        case 'calendarPanel': {",
                    "            console.log('Show calendar panel!!!'); ",
                    "            tab = Ext.getCmp('calendarPanel');",
                    "            break;",
                    "        }",
                    "        case 'employeePanel': {",
                    "            console.log('Show employee panel!!!'); ",
                    "            tab = Ext.getCmp('employeeNav');",
                    "            break;",
                    "        }",
                    "",
                    "        case 'colleaguePanel': {",
                    "            console.log('Show colleague panel!!!'); ",
                    "            tab = Ext.getCmp('colleaguePanel');",
                    "            break;",
                    "        }",
                    "        case 'loginPanel': {",
                    "            tab = Ext.getCmp('loginPanel');",
                    "            loginController.showLoginElements();",
                    "            break;",
                    "        }",
                    "        default:",
                    "            break;",
                    "    }",
                    "    console.log('Show panel' + tab.id);",
                    "    Ext.Viewport.hideMenu('left');",
                    "    Ext.Viewport.setActiveItem(tab);"
                ]
            },
            "name": "showPanel",
            "designerId": "f821057b-c762-4439-87b0-f9a386e07901"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "listitem",
                "designer|params": [
                    "listitem"
                ],
                "designer|targetType": "Ext.dataview.component.ListItem",
                "fn": "OnListItemTap",
                "implHandler": [
                    ""
                ],
                "name": "onListItemTap"
            },
            "name": "OnListItemTap",
            "designerId": "248b8076-ee8a-4b4c-b840-3900306eaab9"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "phone"
                ],
                "fn": "parsePhoneForCall",
                "implHandler": [
                    "    var regExp = /\\d+/g, phoneDigits = \"+7\";",
                    "    while ((m = regExp.exec(phone)) !== null) {",
                    "        phoneDigits += m[0];",
                    "    }",
                    "    return phoneDigits;"
                ]
            },
            "name": "parsePhoneForCall",
            "designerId": "a099ec3b-d6bf-4cdb-8827-cbd6df51dae3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "url",
                    "separateWindow"
                ],
                "fn": "openUrl",
                "implHandler": [
                    "    console.log(\"Controller open url!\" + url);",
                    "    if (separateWindow)",
                    "        window.open(url, '_system','location=yes,closebuttoncaption=Done');",
                    "    else ",
                    "    location.href = url;",
                    ""
                ]
            },
            "name": "openUrl",
            "designerId": "9429291c-78f8-44d4-b63a-5e95925e2c87"
        }
    ]
}